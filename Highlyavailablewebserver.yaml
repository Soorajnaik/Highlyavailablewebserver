AWSTemplateFormatVersion: 2010-09-09
Resources:
  soorajcomPrimary:
    Type: 'AWS::Route53::RecordSetGroup'
    Properties:
      HostedZoneId: Z00968382TYXC5DFBG7K8
      RecordSets:
        - Failover: PRIMARY
          Name: sooraj123.com.
          SetIdentifier: Primary
          Type: A
          HealthCheckId: !Ref healthChkAlice
          AliasTarget:
            HostedZoneId: !GetAtt 
              - elbLBV2
              - CanonicalHostedZoneID
            DNSName: !GetAtt 
              - elbLBV2
              - DNSName
  soorajcomSecondary:
    Type: 'AWS::Route53::RecordSetGroup'
    Properties:
      HostedZoneId: Z00968382TYXC5DFBG7K8
      RecordSets:
        - Failover: SECONDARY
          Name: sooraj123.com.
          SetIdentifier: Secondary
          Type: A
          AliasTarget:
            HostedZoneId: !GetAtt 
              - elbLBV1
              - CanonicalHostedZoneID
            DNSName: !GetAtt 
              - elbLBV1
              - DNSName
  healthChkAlice:
    Type: 'AWS::Route53::HealthCheck'
    Properties:
      HealthCheckConfig:
        FailureThreshold: '3'
        FullyQualifiedDomainName: date.nager.at
        Port: '443'
        RequestInterval: '30'
        ResourcePath: /Api/v2/NextPublicHolidaysWorldwide
        Type: HTTPS
  asgASHelloV1:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      AvailabilityZones:
        - us-west-2a
        - us-west-2b
        - us-west-2c
      Cooldown: '300'
      DesiredCapacity: '1'
      HealthCheckGracePeriod: '300'
      HealthCheckType: EC2
      MaxSize: '1'
      MinSize: '1'
      VPCZoneIdentifier:
        - subnet-09448b43f245ddfd4
        - subnet-0e08adb00a697bd29
        - subnet-05e7a77d0b21f4aaa
      LaunchConfigurationName: !Ref lcHelloWorldV1
      TerminationPolicies:
        - Default
      TargetGroupARNs:
        - !Ref TargetGroupV1
  asgASHelloV2:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      AvailabilityZones:
        - us-west-2a
        - us-west-2b
        - us-west-2c
      Cooldown: '300'
      DesiredCapacity: '1'
      HealthCheckGracePeriod: '300'
      HealthCheckType: EC2
      MaxSize: '1'
      MinSize: '1'
      VPCZoneIdentifier:
        - subnet-09448b43f245ddfd4
        - subnet-0e08adb00a697bd29
        - subnet-05e7a77d0b21f4aaa
      LaunchConfigurationName: !Ref lcHelloWorldV2
      TerminationPolicies:
        - Default
      TargetGroupARNs:
        - !Ref TargetGroupV2
  lcHelloWorldV1:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: ami-0ee8244746ec5d6d4
      InstanceType: t2.nano
      KeyName: sooraj
      SecurityGroups:
        - !Ref sglaunchwizard1
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            SnapshotId: snap-0e43495e3c4684b72
            VolumeSize: 8
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash
            - |
              sudo yum -y install httpd
            - |
              cd /
            - |
              sudo chmod -R a+rwx var
            - |
              cd var
            - |
              cd www
            - |
              cd html
            - |
              sudo yum install git -y
            - |
              git clone https://github.com/Soorajnaik/-hello.git
            - |
              cd -hello
            - |
              cp -R * /var/www/html
            - |
              cd ..
            - |
              sudo service httpd start
            - sudo rm -r helloVersion1
  lcHelloWorldV2:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: ami-0ee8244746ec5d6d4
      InstanceType: t2.nano
      KeyName: sooraj
      SecurityGroups:
        - !Ref sglaunchwizard1
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            SnapshotId: snap-0e43495e3c4684b72
            VolumeSize: 8
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash
            - |
              sudo yum -y install httpd
            - |
              cd /
            - |
              sudo chmod -R a+rwx var
            - |
              cd var
            - |
              cd www
            - |
              cd html
            - |
              sudo yum install git -y
            - |
              git clone https://github.com/Soorajnaik/date.git
            - |
              cd date
            - |
              cp -R * /var/www/html
            - |
              cd ..
            - |
              sudo service httpd start
            - sudo rm -r helloVersion2
  sglaunchwizard1:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'launch-wizard-1 created 2020-04-05T12:37:36.242-04:00'
      VpcId: vpc-0480a186b5f9d7a3d
  ingress1:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref sglaunchwizard1
      IpProtocol: tcp
      FromPort: '80'
      ToPort: '80'
      CidrIp: 0.0.0.0/0
  ingress2:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref sglaunchwizard1
      IpProtocol: tcp
      FromPort: '22'
      ToPort: '22'
      CidrIp: 0.0.0.0/0
  ingress3:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref sglaunchwizard1
      IpProtocol: tcp
      FromPort: '443'
      ToPort: '443'
      CidrIp: 0.0.0.0/0
  egress1:
    Type: 'AWS::EC2::SecurityGroupEgress'
    Properties:
      GroupId: !Ref sglaunchwizard1
      IpProtocol: '-1'
      CidrIp: 0.0.0.0/0
  elbLBV1:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      IpAddressType: ipv4
      Name: eLBV1
      Scheme: internet-facing
      SecurityGroups:
        - !Ref sglaunchwizard1
      Subnets:
        - subnet-09448b43f245ddfd4
        - subnet-0e08adb00a697bd29
      Type: application
  elbLBV2:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      IpAddressType: ipv4
      Name: eLBV2
      Scheme: internet-facing
      SecurityGroups:
        - !Ref sglaunchwizard1
      Subnets:
        - subnet-09448b43f245ddfd4
        - subnet-0e08adb00a697bd29
      Type: application
  TargetGroupV1:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      Port: 80
      Protocol: HTTP
      VpcId: vpc-0480a186b5f9d7a3d
  TargetGroupV2:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      Port: 80
      Protocol: HTTP
      VpcId: vpc-0480a186b5f9d7a3d
  ListenerV1:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroupV1
      LoadBalancerArn: !Ref elbLBV1
      Port: '80'
      Protocol: HTTP
  ListenerV2:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroupV2
      LoadBalancerArn: !Ref elbLBV2
      Port: '80'
      Protocol: HTTP
Description: ''
